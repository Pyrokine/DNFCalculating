from py.base_char import *
import py.lite


# 2020.6.29
# 2029.8.14 添加韩服新护石,添加引力源光弹护石和能量禁锢护石相关选项

# 武器源力剑
class 未来开拓者主动技能(主动技能):
    def 等效CD(self, 武器类型):
        if 武器类型 == '源力剑':
            return round(self.CD / self.恢复 * 1.05, 1)


# 源力剑精通
class skill0(被动技能):
    名称 = '源力剑精通'
    所在等级 = 20
    等级上限 = 30
    基础等级 = 20
    谍影专用倍率 = 1

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        if self.等级 <= 20:
            return round(1 + (0.05 + 0.01 * self.等级) * self.谍影专用倍率, 5)
        else:
            return round(1 + (0.25 + 0.02 * (self.等级 - 20)) * self.谍影专用倍率, 5)

    def 魔法攻击力倍率(self, 武器类型):
        return self.加成倍率(武器类型)


# 细胞弱化
class skill1(被动技能):
    名称 = '细胞弱化'
    所在等级 = 25
    等级上限 = 11
    基础等级 = 1

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.23 + 0.02 * self.等级, 5)


# 源能增幅一觉被动
class skill2(被动技能):
    名称 = '源能增幅'
    所在等级 = 48
    等级上限 = 40
    基础等级 = 20

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.025 + 0.02 * self.等级, 5)


# 二觉被动
class skill3(被动技能):
    名称 = '源力汇聚'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 11

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.22 + 0.02 * self.等级, 5)


# 卓越之力
class skill4(被动技能):
    名称 = '卓越之力'
    所在等级 = 95
    等级上限 = 40
    基础等级 = 4

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.18 + 0.02 * self.等级, 5)


# 超卓之心
class skill5(被动技能):
    名称 = '超卓之心'
    所在等级 = 95
    等级上限 = 11
    基础等级 = 1

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.045 + 0.005 * self.等级, 5)


# 觉醒之抉择
class skill6(被动技能):
    名称 = '觉醒之抉择'
    所在等级 = 100
    等级上限 = 40
    基础等级 = 2
    关联技能 = ['无']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.10 + 0.05 * self.等级, 5)


# 源光斩
class skill7(未来开拓者主动技能):
    名称 = '源光斩'
    所在等级 = 10
    等级上限 = 60
    基础等级 = 48
    攻击段数 = 2
    基础 = 1443.00 - 146.85
    成长 = 146.85
    CD = 5
    TP成长 = 0.08
    TP上限 = 5


# 旋转源能波
class skill8(未来开拓者主动技能):
    名称 = '旋转源能波'
    所在等级 = 15
    等级上限 = 60
    基础等级 = 46
    攻击段数 = 2
    基础 = 1896.00 - 193.16
    成长 = 193.16
    CD = 5
    TP成长 = 0.10
    TP上限 = 5


# 源能护盾，未提炼
class skill9(未来开拓者主动技能):
    名称 = '源能护盾'
    所在等级 = 15
    等级上限 = 60
    基础等级 = 46
    攻击段数 = 2
    基础 = 2996.00 - 310.67
    成长 = 310.67
    CD = 8
    TP成长 = 0.08
    TP上限 = 5


# 镭射源能枪
class skill10(未来开拓者主动技能):
    名称 = '镭射源能枪'
    所在等级 = 20
    等级上限 = 60
    基础等级 = 43
    攻击段数 = 2
    基础 = 3116.00 - 316.33
    成长 = 316.33
    CD = 10
    TP成长 = 0.10
    TP上限 = 5


# 源能波刃
class skill11(未来开拓者主动技能):
    名称 = '源能波刃'
    所在等级 = 25
    等级上限 = 60
    基础等级 = 41
    攻击段数 = 11
    基础 = 3138.00 - 318.48
    成长 = 318.48
    CD = 8
    TP成长 = 0.10
    TP上限 = 5


# 能量飞鱼弹
class skill12(未来开拓者主动技能):
    名称 = '能量飞鱼弹'
    所在等级 = 25
    等级上限 = 60
    基础等级 = 41
    攻击段数 = 1
    基础 = 3254.00 - 330.23
    成长 = 330.23
    CD = 7.5
    TP成长 = 0.10
    TP上限 = 5


# 脉冲斩
class skill13(未来开拓者主动技能):
    名称 = '脉冲斩'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 38
    攻击段数 = 8
    基础 = 4080.00 - 413.84
    成长 = 413.84
    CD = 10
    TP成长 = 0.10
    TP上限 = 5


# 电磁领域
class skill14(未来开拓者主动技能):
    名称 = '电磁领域'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 36
    攻击段数 = 3
    基础 = 6673.00 - 677.71
    成长 = 677.71
    CD = 20
    TP成长 = 0.10
    TP上限 = 5


# 引力源光弹
class skill15(未来开拓者主动技能):
    名称 = '引力源光弹'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 36

    基础 = 593 - 60
    成长 = 60
    攻击次数 = 8

    基础2 = 1673 - 170
    成长2 = 170
    攻击次数2 = 1

    CD = 15
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1
    技能施放时间 = 1
    是否装备护石 = 0
    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.攻击次数2 = 1.28
            self.是否装备护石 = 1
        elif x == 1:
            self.攻击次数2 = 1.60  # 修改位置
            self.是否装备护石 = 1


# 光裂斩，护石取最大蓄气
class skill16(未来开拓者主动技能):
    名称 = '光裂斩'
    所在等级 = 40
    等级上限 = 60
    基础等级 = 33
    攻击段数 = 1
    CD = 25
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1

    基础 = 5612 - 569
    成长 = 569
    攻击次数 = 1

    基础2 = 747 - 76
    成长2 = 76
    攻击次数2 = 5

    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.攻击次数 = 1.98 * 1.06
            self.攻击次数2 = 0
        elif x == 1:
            self.攻击次数 = 1.98 * 1.14  # 修改位置
            self.攻击次数2 = 0


# 光导裂地斩
class skill17(未来开拓者主动技能):
    名称 = '光导裂地斩'
    所在等级 = 45
    等级上限 = 60
    基础等级 = 31
    攻击段数 = 6
    基础 = 6247 - 633.5
    成长 = 633.5
    攻击次数 = 1

    基础2 = 9512 - 965
    成长2 = 965
    攻击次数2 = 1

    CD = 45
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1

    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.攻击次数 *= 1.17
            self.攻击次数2 *= 1.2
        elif x == 1:
            self.攻击次数 *= 1.17
            self.攻击次数2 *= 1.33  # 修改位置


# 一觉，非提炼
class skill18(未来开拓者主动技能):
    名称 = '超能场域'
    所在等级 = 50
    等级上限 = 40
    基础等级 = 12
    攻击段数 = 13
    基础 = 2012 - 12 * 131.4
    成长 = 131.4
    攻击次数 = 13

    基础2 = 112716 - 7361 * 12
    成长2 = 7361
    攻击次数2 = 1

    CD = 145


# 能量禁锢
class skill19(未来开拓者主动技能):
    名称 = '能量禁锢'
    所在等级 = 60
    等级上限 = 40
    基础等级 = 23

    CD = 25
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1

    基础 = 792 - 81
    成长 = 81
    攻击次数 = 10

    基础2 = 3397 - 344.5
    成长2 = 344.5
    攻击次数2 = 1

    # 爆炸次数 = 0
    是否装备护石 = 0
    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.攻击次数 = 14 * 0.8  # 14是测试结论
            self.是否装备护石 = 1
            # self.攻击次数2 += self.爆炸次数* 0.33
        elif x == 1:
            self.攻击次数 = 14 * 0.89  # 修改位置
            self.是否装备护石 = 1
            # self.攻击次数2 += self.爆炸次数 *0.33


# 离散能量波

class skill20(未来开拓者主动技能):
    名称 = '离散能量波'
    所在等级 = 70
    等级上限 = 40
    基础等级 = 18

    基础 = 1658 - 168.5
    成长 = 168.5
    攻击次数 = 10

    基础2 = 7109 - 721.5
    成长2 = 721.5
    攻击次数2 = 1

    CD = 50
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1

    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.CD *= 0.9
            self.攻击次数 = 15 * 0.75
            self.攻击次数2 *= 1.4
        elif x == 1:
            self.CD *= 0.9
            self.攻击次数 = 15 * 0.75
            self.攻击次数2 *= 1.66  # 修改位置


# 绝望圆舞
class skill21(未来开拓者主动技能):
    名称 = '绝望圆舞'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 16
    攻击段数 = 8
    基础 = 38894.00 - 3946.60
    成长 = 3946.60
    CD = 40

    是否有护石 = 1
    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 1.35


# CEAB-2超能爆发，满蓄
class skill22(未来开拓者主动技能):
    名称 = 'CEAB-2超能爆发'
    所在等级 = 80
    等级上限 = 40
    基础等级 = 13
    攻击段数 = 1
    基础 = 44464.00 - 4510.92
    成长 = 4510.92
    CD = 45

    是否有护石 = 1
    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 1.39
            self.CD *= 0.9


# 二觉，1.5秒后c
class skill23(未来开拓者主动技能):
    名称 = '终焉：超世界崩坏'
    所在等级 = 85
    等级上限 = 40
    基础等级 = 5
    攻击段数 = 17

    基础 = 1800 - 216.33333 * 5
    成长 = 216.33333
    攻击次数 = 6

    基础2 = 168632 - 20286.5 * 5
    成长2 = 20286.5
    攻击次数2 = 1

    CD = 180


skill_list = []
i = 0
while i >= 0:
    try:
        exec('skill_list.append(skill' + str(i) + '())')
        i += 1
    except:
        i = -1

skill_sn = dict()
for i in range(len(skill_list)):
    skill_sn[skill_list[i].名称] = i

skill_sn_awaking1 = 0
skill_sn_awaking2 = 0
skill_sn_awaking3 = 0
for i in skill_list:
    if i.所在等级 == 50:
        skill_sn_awaking1 = skill_sn[i.名称]
    if i.所在等级 == 85:
        skill_sn_awaking2 = skill_sn[i.名称]
    if i.所在等级 == 100:
        skill_sn_awaking3 = skill_sn[i.名称]

未来开拓者护石选项 = ['无']
for i in skill_list:
    if i.是否有伤害 == 1 and i.是否有护石 == 1:
        未来开拓者护石选项.append(i.名称)

未来开拓者符文选项 = ['无']
for i in skill_list:
    if i.所在等级 >= 20 and i.所在等级 <= 80 and i.所在等级 != 50 and i.是否有伤害 == 1:
        未来开拓者符文选项.append(i.名称)


class character(py.lite.char_base):
    def 角色賦予(self):
        self.attr["实际名称"] = '未来开拓者'
        self.attr["角色"] = '枪剑士'
        self.attr["职业"] = '源能专家'

        self.attr["武器选项"] = ['源力剑']

        self.attr["类型"] = '魔法百分比'
        self.attr["防具类型"] = '布甲'
        self.attr["防具精通属性"] = ['智力']

        self.attr["主BUFF"] = 2.0

        self.attr["远古记忆"] = 10

        self.attr["引力源光弹充能次数"] = 0
        self.attr["能量禁锢爆炸次数"] = 0

    def 角色数据输入(self):
        self.attr["技能SP等级"] = [20, 1, 20, 11, 4, 1, 2, 48, 46, 46, 43, 41, 41, 38, 36, 36, 33, 31, 12, 23, 18, 16, 13, 5]
        self.attr["技能TP等级"] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 5, 5, 0, 1, 5, 0, 0, 0]
        self.attr["技能释放次数"] = ['', '', '', '', '', '', '', '0', '0', '0', '0', '/CD', '/CD', '0', '0', '/CD', '1', '1', '1', '1', '1', '1', '1', '1']
        self.attr["技能宠物次数"] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1]

        self.attr["装备栏"] = ['撒旦：沸腾之怒', '贝利亚尔：毁灭之种', '亚蒙：谎言之力', '亚巴顿：绝望地狱', '巴尔：堕落之魂', '白象之庇护', '四叶草之初心', '红兔之祝福', '军神的古怪耳环', '军神的遗书', '军神的庇护宝石', '谍影：超级核心']
        self.attr["套装栏"] = ['噩梦：地狱之路[2]', '噩梦：地狱之路[3]', '噩梦：地狱之路[5]', '幸运三角[2]', '幸运三角[3]', '军神的隐秘遗产[2]', '军神的隐秘遗产[3]']
        self.attr["武器类型"] = "源力剑"

        self.attr["强化等级"] = [10, 10, 10, 10, 10, 10, 10, 10, 12, 10, 10, 12]
        self.attr["是否增幅"] = [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0]
        self.attr["武器锻造等级"] = 8

        self.attr["左槽白金技能"] = "细胞弱化"
        self.attr["右槽白金技能"] = "细胞弱化"
        self.attr["时装上衣技能"] = "源力汇聚"

        self.attr["三觉技能选择"] = "二觉序号"

    def 三觉技能选择(self):
        for i, 技能 in enumerate(self.attr["技能栏"]):
            if 技能.名称 == "觉醒之抉择":
                技能.关联技能 = [self.attr["技能栏"][self.attr[self.attr["三觉技能选择"]]].名称]

    def 计算伤害(self):
        self.预处理()
        技能释放次数 = self.技能释放次数计算()
        技能单次伤害 = self.技能单次伤害计算()

        技能栏 = self.attr["技能栏"]
        宠物次数 = self.attr["技能宠物次数"]
        引力源光弹充能次数 = self.attr["引力源光弹充能次数"]
        # 能量禁锢护石
        if 技能栏[skill_sn['能量禁锢']].是否装备护石 == 1:
            技能单次伤害[skill_sn['能量禁锢']] += (0.33 * self.attr["能量禁锢爆炸次数"]) * (技能栏[skill_sn['能量禁锢']].基础2 + 技能栏[skill_sn['能量禁锢']].成长2 *
                                                                               技能栏[skill_sn['能量禁锢']].等级) * (
                                                1 + 技能栏[skill_sn['能量禁锢']].TP成长 * 技能栏[skill_sn['能量禁锢']].TP等级) * \
                                        技能栏[skill_sn['能量禁锢']].倍率 * self.attr["伤害指数"] * i.被动倍率

        技能总伤害 = self.技能总伤害计算(技能释放次数, 技能单次伤害)

        # 引力源光弹护石
        if 技能栏[skill_sn['引力源光弹']].是否装备护石 == 1:
            if 宠物次数[skill_sn['引力源光弹']] < 引力源光弹充能次数:
                技能总伤害[skill_sn['CEAB-2超能爆发']] += (技能单次伤害[skill_sn['引力源光弹']] * 0.3 * 引力源光弹充能次数 * (1 + 0.10 * 宠物次数[skill_sn['引力源光弹']] / 引力源光弹充能次数 + 0.12))
            else:
                技能总伤害[skill_sn['CEAB-2超能爆发']] += (技能单次伤害[skill_sn['引力源光弹']] * 0.3 * 引力源光弹充能次数 * 1.22)

        # 返回结果
        return sum(技能总伤害)

    def 引力源光弹充能次数判断(self):
        引力源光弹次数 = 0
        超能爆发次数 = 0
        次数输入 = self.attr["技能释放次数"]

        if 次数输入[15] != '/CD' or 次数输入[22] != '/CD':
            if 次数输入[15] != '/CD':
                引力源光弹次数 = int(次数输入[15])
            else:
                引力源光弹次数 = 100

            if 次数输入[22] != '/CD':
                超能爆发次数 = int(次数输入[22])
            else:
                超能爆发次数 = 100

            sign = 0
            for x in range(3):
                if self.attr["护石栏"][x] == '引力源光弹' and 引力源光弹次数 != 0 and 超能爆发次数 != 0:
                    sign = 1

            if sign == 1:
                if 引力源光弹次数 != 0 and 超能爆发次数 != 0 and (次数输入[15] != '/CD' or 次数输入[22] != '/CD'):
                    self.attr["引力源光弹充能次数"] = min(超能爆发次数, 引力源光弹次数)
            else:
                self.attr["引力源光弹充能次数"] = 0

    def 能量禁锢爆炸次数判断(self):
        if "能量禁锢" in self.attr["护石栏"]:
            次数输入 = self.attr["技能释放次数"]

            if 次数输入[9] != '/CD':
                源能护盾次数 = int(次数输入[9])
            else:
                源能护盾次数 = 2

            if 次数输入[12] != '/CD':
                能量飞鱼弹次数 = int(次数输入[12])
            else:
                能量飞鱼弹次数 = 2

            if 次数输入[19] != '/CD':
                能量禁锢次数 = int(次数输入[19])
            else:
                能量禁锢次数 = 1

            if 能量禁锢次数 > 0:
                if 源能护盾次数 + 能量飞鱼弹次数 < 能量禁锢次数:
                    能量禁锢爆炸次数 = 0
                elif 源能护盾次数 + 能量飞鱼弹次数 < 能量禁锢次数 * 2:
                    能量禁锢爆炸次数 = 1
                else:
                    能量禁锢爆炸次数 = 2
            else:
                能量禁锢爆炸次数 = 0

            self.attr["能量禁锢爆炸次数"] = 能量禁锢爆炸次数
        else:
            self.attr["能量禁锢爆炸次数"] = 0

    def 技能等级初始化(self):
        super().技能等级初始化()
        self.引力源光弹充能次数判断()
        self.能量禁锢爆炸次数判断()
