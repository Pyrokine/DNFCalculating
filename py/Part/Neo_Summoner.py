from py.base_char import *
import py.lite


class 知源_召唤师主动技能(主动技能):
    秒伤基础 = 0
    秒伤成长 = 0
    秒伤倍率 = 1

    def 秒伤百分比(self):
        if self.等级 == 0:
            return 0
        else:
            return int((self.秒伤基础 + self.秒伤成长 * self.等级) * (1 + self.TP成长 * self.TP等级) * self.倍率 * self.秒伤倍率)


class skill0(被动技能):
    名称 = '召唤兽强化'
    所在等级 = 15
    等级上限 = 30
    基础等级 = 20
    关联技能 = ['契约召唤：桑德尔', '契约召唤：袄索', '精灵召唤：亡魂默克尔', '精灵召唤：极光格雷林', '精灵召唤：火焰赫瑞克', '精灵召唤：冰影阿奎利斯', '契约召唤：路易斯', '精灵召唤：伊伽贝拉', '契约召唤：牛头王库鲁塔', '契约召唤：征服者卡西利亚斯', '咒令：愤怒咆哮', '传说召唤：逆月者拉莫斯', '咒令：逆月之蚀', '必杀剑千鬼杀',
            '至高精灵王', '传说召唤：月蚀之影', '黑月之噬', '魔月·德拉里昂']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.00 + 0.02 * self.等级, 3)


class skill1(被动技能):
    名称 = '心灵感应'
    所在等级 = 15
    等级上限 = 16
    基础等级 = 6

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.03 + 0.02 * self.等级, 3)


class skill2(知源_召唤师主动技能):
    名称 = '精灵献祭'
    所在等级 = 20
    等级上限 = 60
    基础等级 = 43
    基础 = 1903.9803 + 380.9019 * 8 + 1921.9019 + 1903.9803
    成长 = 215.0196 + 43.0980 * 8 + 215.0196 + 215.0196
    CD = 20.0
    演出时间 = 2
    TP成长 = 0.05
    TP上限 = 5


class skill3(知源_召唤师主动技能):
    名称 = '契约召唤：桑德尔'
    所在等级 = 25
    等级上限 = 60
    基础等级 = 41
    基础 = 1880.6458
    成长 = 212.3541
    秒伤基础 = 238.125 + 332.4583 / 1.5
    秒伤成长 = 26.875 + 37.5416 / 1.5
    秒伤倍率 = (20 - 3.501361 * 2) / (20 - 1.65 * 2)
    CD = 12
    演出时间 = 1.65
    TP成长 = 0.10
    TP上限 = 5


class skill4(知源_召唤师主动技能):
    名称 = '契约召唤：袄索'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 38
    基础 = 3099.189189
    成长 = 349.81081
    秒伤基础 = 83.56756 + 211.1351 * 6 / 4
    秒伤成长 = 9.4324 + 23.8648 * 6 / 4
    秒伤倍率 = 0.932241021
    CD = 15
    演出时间 = 1.53
    TP成长 = 0.10
    TP上限 = 5


class skill5(知源_召唤师主动技能):
    名称 = '精灵召唤：亡魂默克尔'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 38
    基础 = 360.3555 * 6
    成长 = 40.6444 * 6
    秒伤基础 = 107.8222 + 163.5111 / 1.5 + 102.4222 * 4 / 7
    秒伤成长 = 12.1778 + 18.4888 / 1.5 + 11.5778 * 4 / 7
    秒伤倍率 = (20 - 1.5013323 * 2) / (20 - 0.67 * 2)
    CD = 15
    TP成长 = 0.10
    TP上限 = 5
    演出时间 = 0.67


class skill6(知源_召唤师主动技能):
    名称 = '精灵召唤：极光格雷林'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 38
    基础 = 2160.1778
    成长 = 243.8222
    秒伤基础 = 23.333 * 3 + 102.3777 / 2 * 5
    秒伤成长 = 2.666 * 3 + 11.6222 / 2 * 5
    秒伤倍率 = (20 - 2.09 * 2) / (20 - 1 * 0.70)
    CD = 15
    演出时间 = 0.7
    TP成长 = 0.10
    TP上限 = 5


class skill7(知源_召唤师主动技能):
    名称 = '精灵召唤：火焰赫瑞克'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 38
    基础 = 432.2444 + 647.8444 + 863.4444 + 70.9333 * 3
    成长 = 48.7555 + 73.1555 + 97.5666 + 8.0666 * 3
    秒伤基础 = 179.6666 + 204.9111 / 1.5 + 50.2 / 1.5
    秒伤成长 = 20.3333 + 23.0888 / 1.5 + 5.8 / 1.5
    秒伤倍率 = (20 - 1.65899 * 2) / (20 - 1 * 1.1)
    CD = 15
    演出时间 = 1.1
    TP成长 = 0.10
    TP上限 = 5


class skill8(知源_召唤师主动技能):
    名称 = '精灵召唤：冰影阿奎利斯'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 38
    基础 = 304.888 * 7
    成长 = 32.5111 * 7
    秒伤基础 = 22.3777 * 3 + 208.4888 / 2 + 231.8888 / 5 * 3
    秒伤成长 = 2.622 * 3 + 23.5111 / 2 + 26.1111 / 5 * 3
    秒伤倍率 = (20 - 1.98 * 2) / (20 - 1 * 0.817)
    CD = 15
    演出时间 = 0.817
    TP成长 = 0.10
    TP上限 = 5


class skill9(知源_召唤师主动技能):
    名称 = '契约召唤：路易斯'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 36
    基础 = 661.4047 + 2647.6904
    成长 = 74.5952 + 298.3095
    秒伤基础 = 165.3571 + 109.5714 / 5 * 10 + 174.2380 / 1.5 + 228.1666 / 1.5
    秒伤成长 = 18.6428 + 12.4285 / 5 * 10 + 19.7619 / 1.5 + 25.8333 / 1.5
    秒伤倍率 = (20 - 9.22) / (20 - 0.60)
    CD = 20
    TP成长 = 0.10
    TP上限 = 5
    演出时间 = 0.6
    是否有护石 = 1
    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.基础 *= 1.2779
            self.成长 *= 1.2779

        elif x == 1:
            self.基础 *= 1.3123
            self.成长 *= 1.3123


class skill10(知源_召唤师主动技能):
    名称 = '精灵召唤：伊伽贝拉'
    所在等级 = 40
    等级上限 = 60
    基础等级 = 33
    基础 = 555.2820 * 1.3 * 8
    成长 = 62.7179 * 1.3 * 8
    秒伤基础 = 82.5641 * 1.3 / 0.6 + 190.3846 * 1.3 / 3.1 * 3 + 415.9230 * 1.3 / 5 * 3 + 646.1025 * 1.3 * 4 / 9.3
    秒伤成长 = 9.4358 * 1.3 / 0.6 + 21.6153 * 1.3 / 3.1 * 3 + 26.0769 * 1.3 / 5 * 3 + 72.8974 * 1.3 * 4 / 9.3
    秒伤倍率 = (20 - 7.7) / (20 - 1.7)
    CD = 31
    TP成长 = 0.10
    TP上限 = 5
    演出时间 = 1.7 + 1.0
    是否有护石 = 1
    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.秒伤基础 *= 0.5618 * 1.15 * 2
            self.秒伤成长 *= 0.5618 * 1.15 * 2
            self.基础 *= 1.15
            self.成长 *= 1.15

        elif x == 1:
            self.秒伤基础 *= 0.6069 * 1.15 * 2
            self.秒伤成长 *= 0.6069 * 1.15 * 2
            self.基础 *= 1.15
            self.成长 *= 1.15


class skill11(知源_召唤师主动技能):
    名称 = '束缚印记'
    所在等级 = 45
    等级上限 = 11
    基础等级 = 1
    基础 = 14368.5714
    成长 = 1622.4285
    CD = 25


class skill12(知源_召唤师主动技能):
    名称 = '契约召唤：牛头王库鲁塔'
    所在等级 = 45
    等级上限 = 60
    基础等级 = 31
    基础 = 1568.9189 + 2195.0540 + 2823.2432
    成长 = 177.0810 + 247.9459 + 318.7567
    秒伤基础 = 403.4594 + 651.4594 / 2 + 1283.1351 / 3
    秒伤成长 = 45.5404 + 73.5405 / 2 + 144.8648 / 3
    秒伤倍率 = (20 - 6.8505) / (20 - 1.83)
    CD = 40
    演出时间 = 1.83
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1
    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.秒伤基础 *= 1.23
            self.秒伤成长 *= 1.23
            self.基础 *= 1.23
            self.成长 *= 1.23

        elif x == 1:
            self.秒伤基础 *= 1.31
            self.秒伤成长 *= 1.31
            self.基础 *= 1.31
            self.成长 *= 1.31


class skill13(被动技能):
    名称 = '强击光环'
    所在等级 = 48
    等级上限 = 40
    基础等级 = 20
    关联技能 = ['精灵召唤：亡魂默克尔', '精灵召唤：极光格雷林', '精灵召唤：火焰赫瑞克', '精灵召唤：冰影阿奎利斯']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return 1.15


class skill14(被动技能):
    名称 = '灵魂支配'
    所在等级 = 48
    等级上限 = 40
    基础等级 = 20

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.105 + 0.015 * self.等级, 3)


class skill15(知源_召唤师主动技能):
    名称 = '契约召唤：征服者卡西利亚斯'
    所在等级 = 50
    等级上限 = 40
    基础等级 = 12
    秒伤基础 = 229.8 * 1.1426 + 516.2666 * 1.1426 / 2 + 1100.6666 * 1.1426 / 2
    秒伤成长 = 69.2 * 1.1426 + 155.7333 * 1.1426 / 1.9 + 332.3333 * 1.1426 / 2
    秒伤倍率 = 0.77
    演出时间 = 0
    CD = 145


class skill16(知源_召唤师主动技能):
    名称 = '必杀剑千鬼杀'
    所在等级 = 50
    等级上限 = 40
    基础等级 = 12
    基础 = 6190.6875 * 1.1426 + 3714.4375 * 1.1426 * 5
    成长 = 1869.3125 * 1.1426 + 1121.5625 * 1.1426 * 5
    CD = 145
    演出时间 = 3.47  # 9.1


class skill17(知源_召唤师主动技能):
    名称 = '精灵召唤：融合精灵海伊轮'
    所在等级 = 60
    等级上限 = 20
    基础等级 = 10
    是否有伤害 = 0
    自定义描述 = 1

    def 技能描述(self, 武器类型):
        return '所有属性强化+' + str(self.属强加成())

    def 属强加成(self):
        if self.等级 == 0:
            return 0
        else:
            return (2 + 2 * self.等级)


class skill18(知源_召唤师主动技能):
    名称 = '咒令：愤怒咆哮'
    所在等级 = 70
    等级上限 = 40
    基础等级 = 18
    基础 = 3945.5 * 4 + 10522
    成长 = 445.5 * 4 + 1188
    CD = 50
    TP成长 = 0.10
    TP上限 = 5
    演出时间 = 2.3
    是否有护石 = 1
    护石选项 = ['魔界', '圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 1.124

        elif x == 1:
            self.倍率 *= 1.204


class skill19(被动技能):
    名称 = '蚀月附灵'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 11

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.22 + 0.02 * self.等级, 3)


class skill20(知源_召唤师主动技能):
    名称 = '黑月之噬'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 16
    基础 = 32819.33333
    成长 = 3705.66667
    CD = 35.3
    是否有护石 = 1
    是否带护石 = 0
    护石选项 = ['圣痕']

    def 装备护石(self, x):
        self.倍率 *= 1.18
        self.CD *= 0.90
        self.是否带护石 = 1


class skill21(知源_召唤师主动技能):
    名称 = '传说召唤：月蚀之影'
    所在等级 = 80
    等级上限 = 40
    基础等级 = 13
    基础 = 3828.583333
    成长 = 432.416667
    攻击次数 = 15.0
    演出时间 = 3
    CD = 43
    是否有护石 = 1
    护石选项 = ['圣痕']

    def 装备护石(self, x):
        self.倍率 *= 1.32


class skill22(知源_召唤师主动技能):
    名称 = '传说召唤：逆月者拉莫斯'
    所在等级 = 85
    等级上限 = 40
    基础等级 = 5
    基础 = 1992.4 * 1.15 * 3
    成长 = 601.6 * 1.15 * 3
    秒伤基础 = 717.6 * 1.15 / 3 * 2 + 192.4 * 1.15 / 3 + 335 * 1.15 / 3 + 430 * 1.15 / 3 + 238.8 * 1.15 / 6 + 837.4 * 1.15 / 6
    秒伤成长 = 216.4 * 1.15 / 3 * 2 + 57.6 * 1.15 / 3 + 101 * 1.15 / 3 + 130 * 1.15 / 3 + 72.2 * 1.15 / 6 + 252.6 * 1.15 / 6
    演出时间 = 1.55
    额外演出时间 = 0
    秒伤倍率 = (20 - 4.500625 * 2) / (20 - 1.55 * 2)
    CD = 10


class skill23(知源_召唤师主动技能):
    名称 = '咒令：逆月之蚀'
    所在等级 = 85
    等级上限 = 40
    基础等级 = 5
    基础 = 4782.4 * 1.15 + 1912.5 * 1.15 * 5 + 2733.2 * 1.15 * 8 + 14346 * 1.15
    成长 = 1443.7 * 1.15 + 577.7 * 1.15 * 5 + 824.9 * 1.15 * 8 + 4332 * 1.15
    演出时间 = 5.25
    CD = 180


class skill24(被动技能):
    名称 = '魔法秀'
    所在等级 = 20
    等级上限 = 20
    基础等级 = 10
    是否主动 = 1
    关联技能 = ['无']
    冷却关联技能 = ['咒令：愤怒咆哮', '精灵献祭', '咒令：逆月之蚀']

    魔法秀数值 = [0, 22, 43, 65, 86, 108, 130, 151, 173, 194, 216, 238, 259, 281, 302, 324, 324, 324, 324, 324, 324]

    def CD缩减倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1 - 0.001 * self.魔法秀数值[self.等级], 3)


class skill25(知源_召唤师主动技能):
    名称 = '鞭挞'
    所在等级 = 10
    等级上限 = 60
    基础等级 = 32
    基础 = 30.5612 + 46.8388
    成长 = 113.7419 + 170.5806
    CD = 3
    TP成长 = 0.05
    TP上限 = 5


class skill26(知源_召唤师主动技能):
    名称 = '魔力印记'
    备注 = '(秒伤)'
    所在等级 = 25
    等级上限 = 11
    基础等级 = 1
    基础 = 322
    成长 = 61
    攻击次数 = 2
    演出时间 = 1

    def 等效CD(self, 武器类型, 输出类型):
        return 1


class skill27(知源_召唤师主动技能):
    名称 = '驱散魔法'
    所在等级 = 10
    等级上限 = 20
    基础等级 = 10
    是否有伤害 = 0
    数据 = [0, 11, 15, 20, 25, 30, 35, 41, 47, 53, 60, 67, 74, 82, 90, 98, 106, 115, 124, 133, 143]
    自定义描述 = 1

    def 技能描述(self, 武器类型):
        return '智力+' + str(self.智力加成())

    def 智力加成(self):
        return self.数据[self.等级] * 4


class skill28(知源_召唤师主动技能):
    名称 = '至高精灵王'
    所在等级 = 95
    等级上限 = 40
    基础等级 = 6
    基础 = 2162 * 1.3
    成长 = 244 * 1.3
    攻击次数 = 9.0
    基础2 = 29185.8 * 1.3
    成长2 = 3295.2 * 1.3
    攻击次数2 = 1.0
    CD = 58
    演出时间 = 2.3


class skill29(被动技能):
    名称 = '逆月'
    所在等级 = 95
    等级上限 = 40
    基础等级 = 4

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.18 + 0.02 * self.等级, 3)


class skill30(知源_召唤师主动技能):
    名称 = '魔月·德拉里昂'
    所在等级 = 100
    等级上限 = 40
    基础等级 = 2
    基础 = 28837 + 67288 + 96125
    成长 = 8706 + 20313 + 29019
    CD = 290
    演出时间 = 5.7
    关联技能 = ['无']

    def 加成倍率(self, 武器类型):
        return 0.0


class skill31(被动技能):
    名称 = '绝对支配'
    所在等级 = 10
    等级上限 = 1
    基础等级 = 1
    关联技能 = ['契约召唤：桑德尔', '契约召唤：袄索', '精灵召唤：亡魂默克尔', '精灵召唤：极光格雷林', '精灵召唤：火焰赫瑞克', '精灵召唤：冰影阿奎利斯', '契约召唤：路易斯', '精灵召唤：伊伽贝拉', '契约召唤：牛头王库鲁塔', '契约召唤：征服者卡西利亚斯', '咒令：愤怒咆哮', '传说召唤：逆月者拉莫斯', '咒令：逆月之蚀', '必杀剑千鬼杀',
            '至高精灵王']

    def 加成倍率(self, 武器类型):
        return 1.045 if self.等级 > 0 else 1.0


skill_list = []
i = 0
while i >= 0:
    try:
        exec('skill_list.append(skill' + str(i) + '())')
        i += 1
    except:
        i = -1

skill_sn = dict()
for i in range(len(skill_list)):
    skill_sn[skill_list[i].名称] = i

skill_sn_awaking1 = 0
skill_sn_awaking2 = 0
skill_sn_awaking3 = 0
for i in skill_list:
    if i.所在等级 == 50:
        skill_sn_awaking1 = skill_sn[i.名称]
    if i.所在等级 == 85:
        skill_sn_awaking2 = skill_sn[i.名称]
    if i.所在等级 == 100:
        skill_sn_awaking3 = skill_sn[i.名称]

option_talismans = ['无']
for i in skill_list:
    if i.是否有伤害 == 1 and i.是否有护石 == 1:
        option_talismans.append(i.名称)

option_rune = ['无']
for i in skill_list:
    if 20 <= i.所在等级 <= 80 and i.所在等级 != 50 and i.是否有伤害 == 1:
        option_rune.append(i.名称)


class character(py.lite.CharBase):
    def 角色賦予(self):
        self.attr["实际名称"] = '知源_召唤师'
        self.attr["角色"] = '魔法师(女)'
        self.attr["职业"] = '召唤师'

        self.attr["武器选项"] = ['魔杖', '法杖']

        self.attr["类型"] = '魔法百分比'
        self.attr["防具类型"] = '布甲'
        self.attr["防具精通属性"] = ['智力']

        self.attr["主BUFF"] = 1.79

        self.attr["远古记忆"] = 10
        self.attr["秒伤比率"] = 1
        self.attr["觉醒选择状态"] = 2

    def 角色数据输入(self):
        self.attr["技能SP等级"] = [20, 6, 43, 27, 38, 38, 3, 1, 3, 3, 33, 1, 31, 20, 20, 12, 12, 10, 18, 11, 0, 13, 5, 5, 10, 32, 1, 10, 6, 4, 2, 1]
        self.attr["技能TP等级"] = [0, 0, 0, 1, 5, 5, 0, 0, 0, 0, 5, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
        self.attr["技能释放次数"] = ['', '', '2', '2', '2', '2', '0', '0', '0', '0', '1', '1', '1', '', '', '/CD', '/CD', '', '/CD', '', '0', '1', '2', '1', '', '4', '/CD', '', '1', '', '1', '']
        self.attr["技能宠物次数"] = [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0]

        self.attr["装备栏"] = ['撒旦：沸腾之怒', '贝利亚尔：毁灭之种', '亚蒙：谎言之力', '亚巴顿：绝望地狱', '巴尔：堕落之魂', '白象之庇护', '四叶草之初心', '红兔之祝福', '军神的古怪耳环', '军神的遗书', '军神的庇护宝石', '火焰地狱']
        self.attr["套装栏"] = ['噩梦：地狱之路[2]', '噩梦：地狱之路[3]', '噩梦：地狱之路[5]', '幸运三角[2]', '幸运三角[3]', '军神的隐秘遗产[2]', '军神的隐秘遗产[3]']
        self.attr["武器类型"] = "魔杖"

        self.attr["强化等级"] = [10, 10, 10, 10, 10, 10, 10, 10, 12, 10, 10, 12]
        self.attr["是否增幅"] = [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0]
        self.attr["武器锻造等级"] = 8

        self.attr["左槽白金技能"] = "心灵感应"
        self.attr["右槽白金技能"] = "心灵感应"
        self.attr["时装上衣技能"] = "心灵感应"

        self.attr["三觉技能选择"] = "二觉序号"

        self.attr["护石栏"] = ["精灵召唤：伊伽贝拉", "契约召唤：牛头王库鲁塔", "无"]
        self.attr["护石类型"] = ["魔界", "魔界", "魔界"]
        self.attr["符文栏"] = ["契约召唤：牛头王库鲁塔", "契约召唤：牛头王库鲁塔", "契约召唤：牛头王库鲁塔", "契约召唤：牛头王库鲁塔", "契约召唤：牛头王库鲁塔", "契约召唤：牛头王库鲁塔", "无", "无", "无"]
        self.attr["符文效果"] = ["攻击+3%", "CD-4%", "攻击+5%,CD+3%", "攻击+3%", "CD-4%", "攻击+5%,CD+3%", "攻击+3%", "CD-4%", "攻击+5%,CD+3%"]

    def 三觉技能选择(self):
        self.attr["技能栏"][self.attr[self.attr["三觉技能选择"]]].被动倍率 = 0

    def 计算伤害(self):
        技能栏 = self.attr["技能栏"]

        if 技能栏[skill_sn['黑月之噬']].是否带护石 == 0:
            技能栏[skill_sn['黑月之噬']].基础 = 0
            技能栏[skill_sn['黑月之噬']].成长 = 0

        self.预处理()
        技能释放次数 = self.技能释放次数计算()
        技能单次伤害 = self.技能单次伤害计算()
        技能总伤害 = self.技能总伤害计算(技能释放次数, 技能单次伤害)

        秒伤比率 = self.attr["秒伤比率"]
        时间输入 = self.attr["时间输入"]
        伤害指数 = self.attr["伤害指数"]

        # 召唤物秒伤
        for i in 技能栏:
            if i.是否有伤害 == 1 and i.是否主动 == 1:
                if i.名称 == '传说召唤：逆月者拉莫斯':
                    技能总伤害[skill_sn[i.名称]] += 秒伤比率 * i.秒伤百分比() * (时间输入 + i.额外演出时间 - i.演出时间 * 技能释放次数[skill_sn[i.名称]]) * 伤害指数 * i.被动倍率 \
                                             * (1 + 0.10 * (10 / (时间输入 % 50)) + 0.12)
                else:
                    技能总伤害[skill_sn[i.名称]] += 秒伤比率 * i.秒伤百分比() * (时间输入 - i.演出时间 * 技能释放次数[skill_sn[i.名称]]) * 伤害指数 * i.被动倍率 \
                                             * (1 + 0.10 * (10 / (时间输入 % 50)) + 0.12)

        return sum(技能总伤害)

    def 伤害指数计算(self):
        技能栏 = self.attr["技能栏"]

        属性强化数值 = 技能栏[skill_sn['精灵召唤：融合精灵海伊轮']].属强加成()
        self.attr["火属性强化"] += 属性强化数值
        self.attr["冰属性强化"] += 属性强化数值
        self.attr["光属性强化"] += 属性强化数值
        self.attr["暗属性强化"] += 属性强化数值
        self.attr["进图智力"] += 技能栏[skill_sn['驱散魔法']].智力加成()

        if self.attr["觉醒选择状态"] == 2:
            技能栏[skill_sn['传说召唤：逆月者拉莫斯']].额外演出时间 += 2.25
            技能栏[skill_sn['契约召唤：征服者卡西利亚斯']].演出时间 += 2.97
        elif self.attr["觉醒选择状态"] == 1:
            技能栏[skill_sn['契约召唤：征服者卡西利亚斯']].演出时间 -= 0

        super().伤害指数计算()
